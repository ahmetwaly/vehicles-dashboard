# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
variables:
  service.rootDirectory: './apigateway'
  service.imageName: 'apigateway'
  helm.SourcesDirectory: './apigateway/apigateway-helm'
  helm.packagePrefix: 'apigateway-helm'

steps:
- script: echo wellcome to vehicles-dashboard!
  displayName: 'wellcome'
- task: Maven@3
  name: apigateway_mvn_build
  displayName: apigateway mvn build
  inputs:
    mavenPomFile: '$(service.rootDirectory)/pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    sonarQubeRunAnalysis: false
- script: echo Build.SourcesDirectory:$(Build.SourcesDirectory) ,service.rootDirectory:$(service.rootDirectory)
  displayName: echo variables

- task: HelmDeploy@0
  displayName: Helm package
  inputs:
    command: package
    chartPath: $(helm.SourcesDirectory
    destination: $(Build.ArtifactStagingDirectory)
    chartVersion: $(Build.BuildId)
    arguments: '--app-version $(Build.BuildId)'
- task: AzureCLI@1
  inputs:
    azureSubscription: 'ResourceManagerConnection'
    scriptLocation: 'inlineScript'
    inlineScript: 'az acr helm push $(System.ArtifactsDirectory)/$(helm.packagePrefix)-$(Build.BuildId).tgz --name $(ACR);'
