name: $(Date:yyyyMMdd)$(Rev:.r)
trigger:
- master
variables:
  service.rootDirectory: './vehiclemanager/'
  service.name: 'vehiclemanager'
  helm.SourcesDirectory: './vehiclemanager/vehiclemanager-helm'
  helm.packagePrefix: 'vehiclemanager-helm'
  k8.name: 'AKS'
  azureSubscription.name: 'Free Trial(8d3b52bc-28ad-4afc-97f2-cd46726a2b0e)'
  acr.name: vehiclesDashboardRegistry
stages:
- stage: Build
  jobs:
    - job: mavenbuild
      displayName: maven build
      pool:
        vmImage: 'ubuntu-latest'
      steps:  
      - task: Maven@3
        name: mvn_build
        displayName: $(service.name) mvn build
        inputs:
          mavenPomFile: '$(service.rootDirectory)/pom.xml'
          options: '-P staging'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          codeCoverageToolOption: 'JaCoCo'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          sonarQubeRunAnalysis: false

      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST-*.xml'
          failTaskOnFailedTests: true
    - job: dockerimagebuild
      displayName: docker image build
      pool:
        vmImage: 'ubuntu-latest'
      steps:  
      - task: Docker@2
        displayName: build docker image
        inputs:
          containerRegistry: '$(acr.name)'
          repository: $(service.name)
          command: 'build'
          Dockerfile: '$(service.rootDirectory)/Dockerfile'
          #arguments: '--build-arg ARTIFACT_PATH=/$(Build.SourcesDirectory)/customermanager/target'
          buildContext: '$(Build.SourcesDirectory)/$(service.rootDirectory)/'

      - task: Docker@2
        displayName: push docker image
        inputs:
          containerRegistry: 'ACR'
          repository: $(service.name)
          command: 'push'
    - job: helm 
      displayName: helm package and push
      pool:
        vmImage: 'ubuntu-latest'
      steps:        
      - task: HelmDeploy@0
        displayName: helm init
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: $(k8.name)
          command: 'init'
          upgradeTiller: false
          arguments: '--client-only'

      - task: HelmDeploy@0
        displayName: Helm package
        inputs:
          command: package
          chartPath: $(helm.SourcesDirectory)
          destination: $(Build.ArtifactStagingDirectory)
          chartVersion: $(Build.BuildId)
          arguments: '--app-version $(Build.BuildId)'

      - task: AzureCLI@1
        displayName: helm push
        inputs:
          azureSubscription: $(azureSubscription.name)
          scriptLocation: 'inlineScript'
          inlineScript: 'az acr helm push $(Build.ArtifactStagingDirectory)/$(helm.packagePrefix)-$(Build.BuildId).tgz --name $(acr.name) --force;'
    