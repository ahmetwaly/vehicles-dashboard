name: $(Date:yyyyMMdd)$(Rev:.r)
variables:
  service.name: 'vehiclemanager'

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - ./$(service.name)
    exclude:
    - ./$(service.name)/$(service.name)-helm

stages:
- stage: Build
  displayName: CI Build $(service.name)
  jobs:
    - job: mavenbuild
      displayName: $(service.name) [mnv build ,static code analysis , security scanning]
      pool:
        vmImage: 'ubuntu-latest'
      steps:

      - task: SonarCloudPrepare@1
        displayName: prepare sonarcloud 
        inputs:
          SonarCloud: 'sonarcloud'
          organization: 'ahmetwaly-github'
          scannerMode: 'Other' 
    
      - task: Maven@3
        name: customermanager_mvn_build
        displayName: $(service.name) mvn build
        inputs:
          mavenPomFile: './$(service.name)/pom.xml'
          options: '-P staging'
          goals: 'package deploy'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          codeCoverageToolOption: 'JaCoCo'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: true
          sonarQubeRunAnalysis: true
          checkStyleRunAnalysis: true
          pmdRunAnalysis: true
          findBugsRunAnalysis: true

      - task: SonarCloudPublish@1
        displayName: $(service.name) publish test resuts
        inputs:
          pollingTimeoutSec: '300'
      
      - task: Docker@2
        displayName: build docker image
        inputs:
          containerRegistry: 'ACR'
          repository: 'vehiclemanager'
          command: 'build'
          Dockerfile: '$(service.rootDirectory)/Dockerfile'
          #arguments: '--build-arg ARTIFACT_PATH=/$(Build.SourcesDirectory)/customermanager/target'
          buildContext: '$(Build.SourcesDirectory)/vehiclemanager/'

      - task: Docker@2
        displayName: push docker image
        inputs:
          containerRegistry: 'ACR'
          repository: 'vehiclemanager'
          command: 'push'

      - task: HelmDeploy@0
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'AKS'
          command: 'init'
          upgradeTiller: false
          arguments: '--client-only'

      - task: HelmDeploy@0
        displayName: Helm package
        inputs:
          command: package
          chartPath: $(helm.SourcesDirectory)
          destination: $(Build.ArtifactStagingDirectory)
          chartVersion: $(Build.BuildId)
          arguments: '--app-version $(Build.BuildId)'

      - task: AzureCLI@1
        inputs:
          azureSubscription: 'Free Trial(8d3b52bc-28ad-4afc-97f2-cd46726a2b0e)'
          scriptLocation: 'inlineScript'
          inlineScript: 'az acr helm push $(Build.ArtifactStagingDirectory)/$(helm.packagePrefix)-$(Build.BuildId).tgz --name vehiclesDashboardRegistry --force;'
      