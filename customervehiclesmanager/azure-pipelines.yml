
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
variables:
  service.rootDirectory: './customervehiclesmanager/'
  service.imageName: 'customervehiclesmanager'
  helm.SourcesDirectory: './customervehiclesmanager/customervehiclesmanager-helm'
  helm.packagePrefix: 'customervehiclesmanager-helm'
  

steps:
- script: echo wellcome to vehicles-dashboard!
  displayName: 'wellcome'

- task: HelmDeploy@0
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'AKS'
    command: 'init'
    upgradeTiller: false
    arguments: '--client-only'

  
- task: Maven@3
  name: customermanager_mvn_build
  displayName: customermanager mvn build
  inputs:
    mavenPomFile: '$(service.rootDirectory)/pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    sonarQubeRunAnalysis: false
- script: echo Build.SourcesDirectory:$(Build.SourcesDirectory) ,service.rootDirectory:$(service.rootDirectory)
  displayName: echo variables

- task: Docker@2
  displayName: build docker image
  inputs:
    containerRegistry: 'ACR'
    repository: 'customervehiclesmanager'
    command: 'build'
    Dockerfile: '$(service.rootDirectory)/Dockerfile'
    #arguments: '--build-arg ARTIFACT_PATH=/$(Build.SourcesDirectory)/customermanager/target'
    buildContext: '$(Build.SourcesDirectory)/customervehiclesmanager/'

- task: Docker@2
  displayName: push docker image
  inputs:
    containerRegistry: 'ACR'
    repository: 'customervehiclesmanager'
    command: 'push'
- task: HelmDeploy@0
  displayName: Helm package
  inputs:
    command: package
    chartPath: $(helm.SourcesDirectory)
    destination: $(Build.ArtifactStagingDirectory)
    chartVersion: $(Build.BuildId)
    arguments: '--app-version $(Build.BuildId)'

- task: AzureCLI@1
  inputs:
    azureSubscription: 'Free Trial(8d3b52bc-28ad-4afc-97f2-cd46726a2b0e)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az acr helm push $(Build.ArtifactStagingDirectory)/$(helm.packagePrefix)-$(Build.BuildId).tgz --name vehiclesDashboardRegistry --force;'
    