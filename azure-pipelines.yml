# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
variables:
  service.rootDirectory: './customermanager/'
  service.imageName: 'customermanager'

steps:
- script: echo wellcome to vehicles-dashboard!
  displayName: 'wellcome'
  
- task: Maven@3
  name: customermanager_mvn_build
  displayName: customermanager mvn build
  inputs:
    mavenPomFile: '$(service.rootDirectory)/pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    sonarQubeRunAnalysis: false
- script: echo Build.SourcesDirectory:$(Build.SourcesDirectory) ,service.rootDirectory:$(service.rootDirectory)
  displayName: echo variables
- task: Docker@2
  inputs:
    containerRegistry: 'vehiclesDashboardRegistryConnection'
    repository: 'customermanager'
    command: 'build'
    Dockerfile: '$(service.rootDirectory)/Dockerfile'
    arguments: '--build-arg ARTIFACT_PATH=/$(Build.SourcesDirectory)/customermanager/target'
    buildContext: '$(Build.SourcesDirectory)'

- task: Docker@2
  inputs:
    containerRegistry: 'vehiclesDashboardRegistryConnection'
    repository: 'customermanager'
    command: 'push'
